from __future__ import annotations

from lxml import etree
from lxml.builder import E

import difflib
import glob
import polib
import typing
from collections import defaultdict


if typing.TYPE_CHECKING:
    from odoo.cli.upgrade_code import FileManager


def upgrade(file_manager: FileManager):
    files = [
        f for f in file_manager
        if f.path.suffix == '.xml'
        and f.path.parts[-3].startswith('l10n_')
        and f.path.parts[-3].endswith('_reports')
        and f.path.parts[-2] == 'data'
    ]
    nb = len(files)
    file_manager.print_progress(0, nb)

    translations = defaultdict(lambda: defaultdict(dict))  # {module: {msgid: {lang: msgstr}}}
    for addons_path in file_manager.addons_path:
        for po_file_name in glob.glob(addons_path + '/l10n_*_reports/i18n*/*.po'):
            module_name = po_file_name.lstrip(addons_path + '/').split('/')[0]
            lang = po_file_name.split('/')[-1].split('.')[0]
            for entry in polib.pofile(po_file_name):
                translations[module_name][entry.msgid][lang] = entry.msgstr

    for i, file in enumerate(files):
        module_name = file.path.parts[-3]
        tree = etree.parse(str(file.path))
        for record_node in tree.xpath("//record[@model='account.report.line']"):
            name_node = record_node.find("field[@name='name']")
            if name_node is not None:
                name_tail = name_node.tail
                name_node.tail = None
                for lang in translations[module_name][name_node.text]:
                    translated_name = E(
                        'field',
                        translations[module_name][name_node.text][lang],
                        name=f'name@{lang}',
                    )
                    translated_name.tail = name_tail
                    name_node.addnext(translated_name)
                name_node.tail = name_tail

        file.content = ''.join(
            diff[2:]
            for diff in difflib.ndiff(
                file.content.splitlines(keepends=True),
                etree.tostring(tree, encoding="utf-8").decode().splitlines(keepends=True),
            )
            # avoid any diff generated by lxml and only keep diff for the lines added
            if diff.startswith((' ', '-'))
            or (diff.startswith('+') and 'name@' in diff)

        )
        file_manager.print_progress(i, nb)
